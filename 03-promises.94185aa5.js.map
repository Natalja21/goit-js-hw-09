{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG3BC,EAAa,KACbC,EAAW,EAEfL,EAAKC,KAAKK,iBAAiB,UAe3B,SAAsCC,GACpCA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,SAASC,MAAMC,OAC9CC,EAAOL,OAAOH,EAAEI,cAAcC,SAASG,KAAKD,OAC5CE,EAASN,OAAOH,EAAEI,cAAcC,SAASI,OAAOF,OAChDG,EAAU,EAEdb,EAAac,aAAY,WACvB,GAAID,IAAYP,OAAOM,GAIrB,OAHAG,cAAcf,GACda,EAAU,OACVZ,EAAW,GAzBjB,IAAuBe,EAAUP,EACzBQ,EA4BJhB,GAAY,EACZY,GAAW,EACXK,YAAW,WACTb,GAASM,IACR,IAjCgBK,EAmCLf,EAnCeQ,EAmCLJ,EAlCpBY,EAAgBE,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BL,YAAW,WACLD,EACFK,EAAQ,CAAEE,SAAAR,EAAUP,UAEpBc,EAAO,CAAEC,SAAAR,EAAUP,YAEpBA,OA2BAgB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUf,EAAKiB,EAALjB,MACjBf,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANrB,EAAM,UAE9DsB,OAAM,SAAAL,G,IAAGM,EAAQN,EAARF,SAAUf,EAAKiB,EAALjB,MAClBf,EAAAkC,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAANrB,EAAM,YAE7DE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet intervalID = null;\nlet position = 0;\n\nrefs.form.addEventListener('submit', onFormButtonSubmitRunPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormButtonSubmitRunPromise(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.elements.delay.value);\n  let step = Number(e.currentTarget.elements.step.value);\n  let amount = Number(e.currentTarget.elements.amount.value);\n  let counter = 0;\n\n  intervalID = setInterval(() => {\n    if (counter === Number(amount)) {\n      clearInterval(intervalID);\n      counter = 0;\n      position = 0;\n      return;\n    }\n\n    position += 1;\n    counter += 1;\n    setTimeout(() => {\n      delay += step;\n    }, 0);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, step);\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$intervalID","$ce04d3a99e08e73b$var$position","addEventListener","e","preventDefault","delay1","Number","currentTarget","elements","delay","value","step","amount","counter","setInterval","clearInterval","position1","shouldResolve","setTimeout","Math","random","Promise","resolve","reject","position","then","param","position2","Notify","success","concat","catch","position3","failure"],"version":3,"file":"03-promises.94185aa5.js.map"}