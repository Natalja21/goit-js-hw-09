{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/B,IAAIC,EAAa,KACbC,EAAW,EAEfL,EAAKC,KAAKK,iBAAiB,UAe3B,SAAsCC,GACpCA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcC,SAASC,MAAMC,OAC9CC,EAAOL,OAAOH,EAAEI,cAAcC,SAASG,KAAKD,OAC5CE,EAASN,OAAOH,EAAEI,cAAcC,SAASI,OAAOF,OAChDG,EAAU,EAEdb,EAAac,aAAY,KACvB,GAAID,IAAYP,OAAOM,GAIrB,OAHAG,cAAcf,GACda,EAAU,OACVZ,EAAW,GAIbA,GAAY,EACZY,GAAW,EACXG,YAAW,KACTX,GAASM,IACR,GAjCP,SAAuBM,EAAUR,GAC/B,MAAMS,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BP,YAAW,KACLE,EACFI,EAAQ,CAAEE,SAAAP,E,MAAUR,IAEpBc,EAAO,CAAEC,SAAAP,E,MAAUR,MAEpBA,MA0BHgB,CAAcxB,EAAUI,GACrBqB,MAAK,EAAGF,SAAAG,EAAQlB,MAAEA,MACjBf,EAAAkC,OAAOC,QAAQ,uBAAqBF,QAAiBlB,UAEtDqB,OAAM,EAAGN,SAAAO,EAAQtB,MAAEA,MAClBf,EAAAkC,OAAOI,QAAQ,sBAAoBD,QAAetB,YAErDE","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nlet intervalID = null;\nlet position = 0;\n\nrefs.form.addEventListener('submit', onFormButtonSubmitRunPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormButtonSubmitRunPromise(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.elements.delay.value);\n  let step = Number(e.currentTarget.elements.step.value);\n  let amount = Number(e.currentTarget.elements.amount.value);\n  let counter = 0;\n\n  intervalID = setInterval(() => {\n    if (counter === Number(amount)) {\n      clearInterval(intervalID);\n      counter = 0;\n      position = 0;\n      return;\n    }\n\n    position += 1;\n    counter += 1;\n    setTimeout(() => {\n      delay += step;\n    }, 0);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }, step);\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$intervalID","$47d4ff9957288465$var$position","addEventListener","e","preventDefault","delay1","Number","currentTarget","elements","delay","value","step","amount","counter","setInterval","clearInterval","setTimeout","position1","shouldResolve","Math","random","Promise","resolve","reject","position","$47d4ff9957288465$var$createPromise","then","position2","Notify","success","catch","position3","failure"],"version":3,"file":"03-promises.3d153071.js.map"}